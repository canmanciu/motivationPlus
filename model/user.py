# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, nickname: str=None, email: str=None, mobile: str=None):  # noqa: E501
        """User - a model defined in Swagger

        :param id: The id of this User.  # noqa: E501
        :type id: str
        :param nickname: The nickname of this User.  # noqa: E501
        :type nickname: str
        :param email: The email of this User.  # noqa: E501
        :type email: str
        :param mobile: The mobile of this User.  # noqa: E501
        :type mobile: str
        """
        self.swagger_types = {
            'id': str,
            'nickname': str,
            'email': str,
            'mobile': str
        }

        self.attribute_map = {
            'id': 'id',
            'nickname': 'nickname',
            'email': 'email',
            'mobile': 'mobile'
        }
        self._id = id
        self._nickname = nickname
        self._email = email
        self._mobile = mobile

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: str
        """

        self._id = id

    @property
    def nickname(self) -> str:
        """Gets the nickname of this User.


        :return: The nickname of this User.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname: str):
        """Sets the nickname of this User.


        :param nickname: The nickname of this User.
        :type nickname: str
        """

        self._nickname = nickname

    @property
    def email(self) -> str:
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def mobile(self) -> str:
        """Gets the mobile of this User.


        :return: The mobile of this User.
        :rtype: str
        """
        return self._mobile

    @mobile.setter
    def mobile(self, mobile: str):
        """Sets the mobile of this User.


        :param mobile: The mobile of this User.
        :type mobile: str
        """

        self._mobile = mobile
